# **********************************************************************
# Copyright 2010 VMware, Inc.  All rights reserved. VMware Confidential
# **********************************************************************

# **********************************************************************
#                           IMPORTANT NOTE:
# Empty 'XYZ.user.domain' property value means SSO local domain. Commenting
# any of these properties is not correct!
# **********************************************************************

oidc.op.port = 443
oidc.rp.prefix = oidc-client-test-
system.tenant = lw-testdom.com
system.domain = lw-testdom.com
system.admin.username = Administrator@lw-testdom.com
system.admin.password = Passw0rd$

# Specify an existing SSO user that has administrative role
sso.admin.user.name=administrator
sso.admin.user.pass=xxx
sso.admin.user.domain=lw-testdom.com

localUser.user.name=rrr
localUser.user.password=rrr
localUser.user.domain=localos
localUser.group.name=

dbUser.user.name=administrator@lw-testdom.com
dbUser.user.password=xxx
dbUser.user.domain=lw-testdom.com
dbUser.group.name=

# Specify an existing SSO user
sso.valid.user.name=administrator
sso.valid.user.pass=xxx
sso.valid.user.domain=lw-testdom.com

#***************************************************************
# end of parameters needing frequent update
#***************************************************************
#
# Specify the password for SSO user that will be temporarily created.
# This password should meet currently applicable STS password policy!
#
sso.temp.user.pass=myPassword#123

temp.user.name=tempUser
temp.user.password=rootCa$hc0w
temp.group.name=tempGroup

hok.keystore.url=/certs/hokKeyStore.jks
hok.cert.alias=HokUser
HokUser.keystore.password=password

solution1.user.name=solution1
solution1.cert=/certs/solutionKeyStore.jks
solution1.certalias=solution1
solution1.group.name=tempGroup
solution1.keystore.password=password

solution2.user.name=solution2
solution2.cert=/certs/solutionKeyStore.jks
solution2.certalias=solution2
solution2.keystore.password=password

HokUser.user.name=HokUser
HokUser.cert=/certs/hokKeyStore.jks
HokUser.certalias=HokUser
HokUser.keystore.password=password

solution3.user.name=solution3
solution3.cert=/certs/solutionKeyStore.jks
solution3.certalias=solution3
solution3.keystore.password=password

sts.spn=HOST/<SSO_Machine_Name>@<AD_Domain_Name>

# Needed when 'sso.server.address' protocol is HTTPS:
# Trusted keystore and/or thumbprint need to be specified
# in order to validate the SSL certificate of STS service
sts.client.ssl.trust.keystore=
sts.client.ssl.trust.keystore.pass=
sts.client.ssl.trust.thumbprint=MIIC9zCCAd+gAwIBAgIGATD/zOWiMA0GCSqGSIb3DQEBCwUAMDIxMDAuBgNVBAMTJ1JTQSBJZGVu
dGl0eSBhbmQgQWNjZXNzIFRvb2xraXQgUm9vdCBDQTAeFw0xMTA3MDUxNDE0MzZaFw0zNjA3MDYx
NDE0MzZaMDIxMDAuBgNVBAMTJ1JTQSBJZGVudGl0eSBhbmQgQWNjZXNzIFRvb2xraXQgUm9vdCBD
QTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJTKkDw7CvNoWqWxy9HYAb4g/zjdLlnj
qWcjAkmAC6Dvh2tZwIk1yx7iS3J2pKma9kB/WdsQu78oH1UjDtUfxmJ2ZRdAwM7Q64wPcFP1H5Q2
b9Cg0OiYdkV9JBAV9RsHiJvuQ5OyKEHOSRTiBcTm0xWyPPXhggwl48rA7b0N2OJTVHMDkoTe/0hZ
iKUHw8rbKgQsLppj/n6yf8pCgYR2x/TLJ10Bfz1kNLnQZEVLmDR67O5uKJqta2KxC/V+ECeYERiU
9wrQD5u0jL1+w18Xzd7neRPr3GlOhng4txZqJTbFzobYkfSeQ9MKdGF+od7E+RXNfRhT8eSzONh/
VmXvMdsCAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAV6w2pxnI
6q2lUI1N4OxXz+3b5CkGJWta061nEk9f66Xi+3j4OyeFt3X/EbJ8YrKIKdYG/b5zed5nEW3ryL4EU
XG8zIeJ8S2cmDscQOvzpCR8uc4EGtVbNWm6m/L57Du4NRa0pK+Ir+wddr1NTzEMadS2CNDNrzDI5
6gosT86jyCtA6pz4wEz6tBYCIOA5OF0WdljUwIoaWwEhwjAbAeft2ewtGwgdjAB6wZgS8TeLdKSm
FIM0Cnxn+gQ5DT2ijZ854o8YWrdvS5qYxjylM7+xotY2MnJsjR42+Dlau2CcrsenHFW6RQB9n/I5
S2/c+WvS05/umrKzHIlKf5VnpXRxQg==

do-not-exist.user.name=do-not-exist
do-not-exist.user.password=VMw@re11
do-not-exist.user.domain=localos
do-not-exist.group.name=

bad-password.user.name=administrator
bad-password.user.password=VMw@re11
bad-password.user.domain=localos
bad-password.group.name=

temp.user.name=tempUser
temp.user.password=rootCa$hc0w
temp.group.name=tempGroup

ldapUser.user.name=ldapuser3@ssotest.com
ldapUser.user.password=Passw0rd$
ldapUser.user.domain=ssotest.com
ldapUser.group.name=

ad1User.user.name=staf@pslabs.eng.vmware.com
ad1User.user.password=Passw0rd$
ad1User.user.domain=pslabs.eng.vmware.com
ad1User.group.name=

ad2User.user.name=staf1@pslabs.eng.vmware.com
ad2User.user.password=Passw0rd$
ad2User.user.domain=pslabs.eng.vmware.com
ad2User.group.name=

# Specify either an non-existing user or an existing user with invalid password
sso.invalid.user.name=invalid_user
sso.invalid.user.pass=invalid_pass
sso.invalid.user.domain=invalid_domain

# Specify a non-existing SSO user
sso.non-existing.user.name=qa1
sso.non-existing.user.domain=vmwarem1

# Specify an existing SSO user from active directory. The SSO server must run
# on a machine joined in the same domain. Domain name should be in lower case.
sso.valid.ad.user.name=ssoadmin@pslabs.eng.vmware.com
sso.valid.ad.user.pass=Passw0rd$
sso.valid.ad.user.domain=pslabs.eng.vmware.com
sso.valid.ad.user.group=Administrators

# Specify an existing SSO group from active directory
sso.valid.ad.group.name=Guests
sso.valid.ad.group.domain=pslabs.eng.vmware.com
sso.valid.ad.group.description=AD group description

#Specify another existing sso user from active directory.
sso.valid.ad.user2.name=staf1
sso.valid.ad.user2.pass=Passw0rd$
sso.valid.ad.user2.domain=pslabs.eng.vmware.com
sso.valid.ad.user2.firstname=staf1
sso.valid.ad.user2.lastname=testuser
sso.valid.ad.user2.emailaddress=staf1@vmware.com
sso.valid.ad.user2.description=AD user2 description

# Specify an existing e-mail which you can check. The integration tests will use this e-mail
sso.valid.email.host=valid_host
sso.valid.email.address=valid_mail
sso.valid.email.port=25

